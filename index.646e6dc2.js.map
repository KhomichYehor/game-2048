{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_field_get.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js","node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js","node_modules/@swc/helpers/esm/_class_private_field_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_class_private_field_set.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nfunction $197cd56b15c33885$var$keyListener(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n    }\n    $197cd56b15c33885$var$update();\n}\nfunction $197cd56b15c33885$var$update() {\n    $197cd56b15c33885$var$game.getState().forEach(function(row, i) {\n        row.forEach(function(el, j) {\n            var cellCssClass = \"field-cell\";\n            cellCssClass += el >= 2 ? \" field-cell--\".concat(el) : \"\";\n            $197cd56b15c33885$var$gameCells[i][j].innerText = el || \"\";\n            $197cd56b15c33885$var$gameCells[i][j].className = cellCssClass;\n        });\n    });\n    $197cd56b15c33885$var$scoreElement.innerText = $197cd56b15c33885$var$game.getScore();\n    switch($197cd56b15c33885$var$game.getStatus().toUpperCase()){\n        case \"WIN\":\n            $197cd56b15c33885$var$changeMessage(\"WIN\");\n            break;\n        case \"LOSE\":\n            $197cd56b15c33885$var$changeMessage(\"LOSE\");\n            break;\n        case \"NO_MOVES\":\n            $197cd56b15c33885$var$changeMessage(\"NO_MOVES\");\n            break;\n        default:\n            $197cd56b15c33885$var$hideAllMessages();\n            break;\n    }\n}\nfunction $197cd56b15c33885$var$start() {\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case \"idle\":\n            $197cd56b15c33885$var$game.start();\n            $197cd56b15c33885$var$toggleButton(\"restart\");\n            $197cd56b15c33885$var$removeStartMessage();\n            break;\n        case \"playing\":\n        case \"win\":\n        case \"lose\":\n            $197cd56b15c33885$var$game.restart();\n            $197cd56b15c33885$var$toggleButton(\"start\");\n            $197cd56b15c33885$var$changeMessage(\"START\");\n            break;\n    }\n    $197cd56b15c33885$var$update();\n}\nfunction $197cd56b15c33885$var$removeStartMessage() {\n    var startMessage = document.querySelector(\".message-start\");\n    if (startMessage) startMessage.remove();\n}\nfunction $197cd56b15c33885$var$toggleButton(text) {\n    $197cd56b15c33885$var$button.classList.toggle(\"start\");\n    $197cd56b15c33885$var$button.classList.toggle(\"restart\");\n    $197cd56b15c33885$var$button.innerText = text.toUpperCase();\n}\nfunction $197cd56b15c33885$var$changeMessage(type) {\n    var messageClass;\n    switch(type.toUpperCase()){\n        case \"WIN\":\n            messageClass = \".message-win\";\n            break;\n        case \"LOSE\":\n            messageClass = \".message-lose\";\n            break;\n        case \"START\":\n            messageClass = \".message-start\";\n            break;\n        case \"NO_MOVES\":\n            messageClass = \".message-no-moves\";\n            break;\n        default:\n            throw new Error(\"unknown type\");\n    }\n    $197cd56b15c33885$var$messageContainer.querySelector(messageClass).classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$hideAllMessages() {\n    $197cd56b15c33885$var$messageContainer.querySelectorAll(\".message\").forEach(function(msg) {\n        return msg.classList.add(\"hidden\");\n    });\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac3905202f0710b7$export$184ff5d81c0e5775(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n    return descriptor.value;\n}\n\n\nfunction $753de3cb5925592a$export$20c20a422940e173(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    return privateMap.get(receiver);\n}\n\n\nfunction $2f97c2a4ea6269f4$export$5a67b255b80ee4f2(receiver, privateMap) {\n    var descriptor = (0, $753de3cb5925592a$export$20c20a422940e173)(receiver, privateMap, \"get\");\n    return (0, $ac3905202f0710b7$export$184ff5d81c0e5775)(receiver, descriptor);\n}\n\n\nfunction $f86983e96b0c893e$export$6b10452b5ac97eba(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $5d6c3530fa14a187$export$e235798705076415(obj, privateMap, value) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateMap);\n    privateMap.set(obj, value);\n}\n\n\nfunction $a91e4d47d6e0e68a$export$b7b24cdba6bcb11c(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) // This should only throw in strict mode, but class bodies are\n        // always strict and private fields can only be used inside\n        // class bodies.\n        throw new TypeError(\"attempted to set read only private field\");\n        descriptor.value = value;\n    }\n}\n\n\n\nfunction $20d5c04b0c6865c9$export$268446c9779b3a21(receiver, privateMap, value) {\n    var descriptor = (0, $753de3cb5925592a$export$20c20a422940e173)(receiver, privateMap, \"set\");\n    (0, $a91e4d47d6e0e68a$export$b7b24cdba6bcb11c)(receiver, descriptor, value);\n    return value;\n}\n\n\nfunction $ac6739cbe5bf1c84$export$ccedaf978f62b9dd(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\n\nfunction $ea91727f98d0802f$export$1002c20f28174dbf(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar // current game status\n$3d28d7f1aac198f5$var$_status = /*#__PURE__*/ new WeakMap(), // current score\n$3d28d7f1aac198f5$var$_score = /*#__PURE__*/ new WeakMap(), // flag for Game objects exiting only for checking moves\n$3d28d7f1aac198f5$var$_isForCheck = /*#__PURE__*/ new WeakMap(), // current state of gamefield\n$3d28d7f1aac198f5$var$_state = /*#__PURE__*/ new WeakMap(), // initial state of gamefield\n$3d28d7f1aac198f5$var$_initialState = /*#__PURE__*/ new WeakMap(), $3d28d7f1aac198f5$var$_applyInitialState = /*#__PURE__*/ new WeakSet(), /**\n   * Checks if any move is possible\n   * @returns {boolean}\n   */ $3d28d7f1aac198f5$var$_isMovePossible = /*#__PURE__*/ new WeakSet(), /**\n   * Returns if adding number to state was succesfull\n   * @returns {boolean}\n   */ $3d28d7f1aac198f5$var$_addNumber = /*#__PURE__*/ new WeakSet(), /**\n   * Returns positions of empty fields in state\n   * @returns {({ x: number, y: number})[]}\n   */ $3d28d7f1aac198f5$var$_findEmptyFields = /*#__PURE__*/ new WeakSet(), // reverser rows of state\n$3d28d7f1aac198f5$var$_reverse = /*#__PURE__*/ new WeakSet(), // changes idexes from state[x][y] to state[y][x] rotating state array\n$3d28d7f1aac198f5$var$_rotate = /*#__PURE__*/ new WeakSet();\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.deafultInitialState, isForCheck = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_applyInitialState);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_isMovePossible);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_addNumber);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_findEmptyFields);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_reverse);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_rotate);\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $3d28d7f1aac198f5$var$_status, {\n            writable: true,\n            value: \"idle\"\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $3d28d7f1aac198f5$var$_score, {\n            writable: true,\n            value: 0\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $3d28d7f1aac198f5$var$_isForCheck, {\n            writable: true,\n            value: false\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $3d28d7f1aac198f5$var$_state, {\n            writable: true,\n            value: void 0\n        });\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $3d28d7f1aac198f5$var$_initialState, {\n            writable: true,\n            value: void 0\n        });\n        (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_initialState, initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        }));\n        (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_applyInitialState, $3d28d7f1aac198f5$var$applyInitialState).call(this);\n        (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_isForCheck, isForCheck);\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                var isStateChanged = false;\n                if ((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_status) !== \"playing\" && !(0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_isForCheck)) return isStateChanged;\n                (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_state).forEach(function(row) {\n                    var mergedCellsIndexes = new Set();\n                    var emptyIndexes = [];\n                    for(var i = 0; i < row.length; i++){\n                        if (row[i] === 0) {\n                            emptyIndexes.push(i);\n                            continue;\n                        }\n                        var cellIndex = i;\n                        if (emptyIndexes.length) {\n                            cellIndex = emptyIndexes.shift();\n                            emptyIndexes.push(i);\n                            row[cellIndex] = row[i];\n                            row[i] = 0;\n                            isStateChanged = true;\n                        }\n                        var previousCellIndex = cellIndex - 1;\n                        if (previousCellIndex >= 0 && row[previousCellIndex] === row[cellIndex] && !mergedCellsIndexes.has(previousCellIndex)) {\n                            mergedCellsIndexes.add(previousCellIndex);\n                            row[previousCellIndex] *= 2;\n                            row[cellIndex] = 0;\n                            emptyIndexes.unshift(cellIndex);\n                            (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(_this, $3d28d7f1aac198f5$var$_score, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $3d28d7f1aac198f5$var$_score) + row[previousCellIndex]);\n                            isStateChanged = true;\n                            if (row[previousCellIndex] >= 2048) (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(_this, $3d28d7f1aac198f5$var$_status, \"win\");\n                        }\n                    }\n                });\n                if (isStateChanged) (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_addNumber, $3d28d7f1aac198f5$var$addNumber).call(this);\n                if (!(0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_isForCheck) && !(0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_isMovePossible, $3d28d7f1aac198f5$var$isMovePossible).call(this)) (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_status, \"lose\");\n                return isStateChanged;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_reverse, $3d28d7f1aac198f5$var$reverse).call(this);\n                var result = this.moveLeft();\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_reverse, $3d28d7f1aac198f5$var$reverse).call(this);\n                return result;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_rotate, $3d28d7f1aac198f5$var$rotate).call(this);\n                var result = this.moveLeft();\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_rotate, $3d28d7f1aac198f5$var$rotate).call(this);\n                return result;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_rotate, $3d28d7f1aac198f5$var$rotate).call(this);\n                var result = this.moveRight();\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_rotate, $3d28d7f1aac198f5$var$rotate).call(this);\n                return result;\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_score);\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_state).map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_status);\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_addNumber, $3d28d7f1aac198f5$var$addNumber).call(this);\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_addNumber, $3d28d7f1aac198f5$var$addNumber).call(this);\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_status, \"playing\");\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_applyInitialState, $3d28d7f1aac198f5$var$applyInitialState).call(this);\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_score, 0);\n                (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_status, \"idle\");\n            }\n        }\n    ], [\n        {\n            key: \"deafultSize\",\n            get: function get() {\n                return 4;\n            }\n        },\n        {\n            key: \"deafultInitialState\",\n            get: function get() {\n                return new Array(Game.deafultSize).fill(null).map(function(el) {\n                    return new Array(Game.deafultSize).fill(0);\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$applyInitialState() {\n    (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_state, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_initialState).map(function(row) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n    }));\n}\nfunction $3d28d7f1aac198f5$var$isMovePossible() {\n    var gameCopy = new $3d28d7f1aac198f5$var$Game(this.getState(), true);\n    return gameCopy.moveLeft() || gameCopy.moveRight() || gameCopy.moveUp() || gameCopy.moveDown();\n}\nfunction $3d28d7f1aac198f5$var$addNumber() {\n    var number = Math.random() > 0.1 ? 2 : 4;\n    var emptyFields = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_findEmptyFields, $3d28d7f1aac198f5$var$findEmptyFields).call(this);\n    if (!emptyFields.length) return false;\n    var randomIndex = Math.floor(Math.random() * emptyFields.length);\n    var _emptyFields_randomIndex = emptyFields[randomIndex], x = _emptyFields_randomIndex.x, y = _emptyFields_randomIndex.y;\n    (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_state)[y][x] = number;\n    return true;\n}\nfunction $3d28d7f1aac198f5$var$findEmptyFields() {\n    var result = [];\n    (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_state).forEach(function(row, y) {\n        row.forEach(function(cell, x) {\n            if (cell === 0) result.push({\n                x: x,\n                y: y\n            });\n        });\n    });\n    return result;\n}\nfunction $3d28d7f1aac198f5$var$reverse() {\n    (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_state).forEach(function(row) {\n        return row.reverse();\n    });\n}\nfunction $3d28d7f1aac198f5$var$rotate() {\n    var _this = this;\n    (0, $20d5c04b0c6865c9$export$268446c9779b3a21)(this, $3d28d7f1aac198f5$var$_state, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_state).map(function(row, i) {\n        var newRow = [];\n        for(var j = 0; j < row.length; j++)newRow.push((0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(_this, $3d28d7f1aac198f5$var$_state)[j][i]);\n        return newRow;\n    }));\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$gameCells = Array.from($197cd56b15c33885$var$gameField.querySelectorAll(\".field-row\")).map(function(row) {\n    return Array.from(row.children);\n});\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageContainer = document.querySelector(\".message-container\");\nvar $197cd56b15c33885$var$button = document.querySelector(\".button.start\");\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$keyListener);\n$197cd56b15c33885$var$button.addEventListener(\"click\", $197cd56b15c33885$var$start);\n\n})();\n//# sourceMappingURL=index.646e6dc2.js.map\n","'use strict';\n\nfunction keyListener(e) {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n  }\n\n  update();\n}\n\nfunction update() {\n  game.getState().forEach((row, i) => {\n    row.forEach((el, j) => {\n      let cellCssClass = 'field-cell';\n\n      cellCssClass += el >= 2 ? ` field-cell--${el}` : '';\n      gameCells[i][j].innerText = el || '';\n      gameCells[i][j].className = cellCssClass;\n    });\n  });\n\n  scoreElement.innerText = game.getScore();\n\n  switch (game.getStatus().toUpperCase()) {\n    case 'WIN':\n      changeMessage('WIN');\n      break;\n    case 'LOSE':\n      changeMessage('LOSE');\n      break;\n    case 'NO_MOVES':\n      changeMessage('NO_MOVES');\n      break;\n    default:\n      hideAllMessages();\n      break;\n  }\n}\n\nfunction start() {\n  switch (game.getStatus()) {\n    case 'idle':\n      game.start();\n      toggleButton('restart');\n      removeStartMessage();\n      break;\n    case 'playing':\n    case 'win':\n    case 'lose':\n      game.restart();\n      toggleButton('start');\n      changeMessage('START');\n      break;\n  }\n\n  update();\n}\n\nfunction removeStartMessage() {\n  const startMessage = document.querySelector('.message-start');\n\n  if (startMessage) {\n    startMessage.remove();\n  }\n}\n\nfunction toggleButton(text) {\n  button.classList.toggle('start');\n  button.classList.toggle('restart');\n  button.innerText = text.toUpperCase();\n}\n\nfunction changeMessage(type) {\n  let messageClass;\n\n  switch (type.toUpperCase()) {\n    case 'WIN':\n      messageClass = '.message-win';\n      break;\n    case 'LOSE':\n      messageClass = '.message-lose';\n      break;\n    case 'START':\n      messageClass = '.message-start';\n      break;\n    case 'NO_MOVES':\n      messageClass = '.message-no-moves';\n      break;\n    default:\n      throw new Error('unknown type');\n  }\n\n  messageContainer.querySelector(messageClass).classList.remove('hidden');\n}\n\nfunction hideAllMessages() {\n  messageContainer\n    .querySelectorAll('.message')\n    .forEach((msg) => msg.classList.add('hidden'));\n}\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameField = document.querySelector('.game-field');\nconst gameCells = Array.from(gameField.querySelectorAll('.field-row')).map(\n  (row) => Array.from(row.children),\n);\nconst scoreElement = document.querySelector('.game-score');\nconst messageContainer = document.querySelector('.message-container');\nconst button = document.querySelector('.button.start');\n\ndocument.addEventListener('keydown', keyListener);\nbutton.addEventListener('click', start);\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  static get deafultSize() {\n    return 4;\n  }\n\n  static get deafultInitialState() {\n    return new Array(Game.deafultSize)\n      .fill(null)\n      .map((el) => new Array(Game.deafultSize).fill(0));\n  }\n  // current game status\n  #status = 'idle';\n  // current score\n  #score = 0;\n  // flag for Game objects exiting only for checking moves\n  #isForCheck = false;\n  // current state of gamefield\n  #state;\n  // initial state of gamefield\n  #initialState;\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState = Game.deafultInitialState, isForCheck = false) {\n    this.#initialState = initialState.map((row) => [...row]);\n    this.#applyInitialState();\n    this.#isForCheck = isForCheck;\n  }\n\n  moveLeft() {\n    let isStateChanged = false;\n\n    if (this.#status !== 'playing' && !this.#isForCheck) {\n      return isStateChanged;\n    }\n\n    this.#state.forEach((row) => {\n      const mergedCellsIndexes = new Set();\n      const emptyIndexes = [];\n\n      for (let i = 0; i < row.length; i++) {\n        if (row[i] === 0) {\n          emptyIndexes.push(i);\n          continue;\n        }\n\n        let cellIndex = i;\n\n        if (emptyIndexes.length) {\n          cellIndex = emptyIndexes.shift();\n          emptyIndexes.push(i);\n\n          row[cellIndex] = row[i];\n          row[i] = 0;\n          isStateChanged = true;\n        }\n\n        const previousCellIndex = cellIndex - 1;\n\n        if (\n          previousCellIndex >= 0 &&\n          row[previousCellIndex] === row[cellIndex] &&\n          !mergedCellsIndexes.has(previousCellIndex)\n        ) {\n          mergedCellsIndexes.add(previousCellIndex);\n          row[previousCellIndex] *= 2;\n          row[cellIndex] = 0;\n          emptyIndexes.unshift(cellIndex);\n          this.#score += row[previousCellIndex];\n          isStateChanged = true;\n\n          if (row[previousCellIndex] >= 2048) {\n            this.#status = 'win';\n          }\n        }\n      }\n    });\n\n    if (isStateChanged) {\n      this.#addNumber();\n    }\n\n    if (!this.#isForCheck && !this.#isMovePossible()) {\n      this.#status = 'lose';\n    }\n\n    return isStateChanged;\n  }\n  moveRight() {\n    this.#reverse();\n\n    const result = this.moveLeft();\n\n    this.#reverse();\n\n    return result;\n  }\n  moveUp() {\n    this.#rotate();\n\n    const result = this.moveLeft();\n\n    this.#rotate();\n\n    return result;\n  }\n  moveDown() {\n    this.#rotate();\n\n    const result = this.moveRight();\n\n    this.#rotate();\n\n    return result;\n  }\n\n  /**\n   * @returns {number}\n   */\n\n  getScore() {\n    return this.#score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n\n  getState() {\n    return this.#state.map((row) => [...row]);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.#status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.#addNumber();\n    this.#addNumber();\n    this.#status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.#applyInitialState();\n    this.#score = 0;\n    this.#status = 'idle';\n  }\n\n  #applyInitialState() {\n    this.#state = this.#initialState.map((row) => [...row]);\n  }\n  /**\n   * Checks if any move is possible\n   * @returns {boolean}\n   */\n  #isMovePossible() {\n    const gameCopy = new Game(this.getState(), true);\n\n    return (\n      gameCopy.moveLeft() ||\n      gameCopy.moveRight() ||\n      gameCopy.moveUp() ||\n      gameCopy.moveDown()\n    );\n  }\n  /**\n   * Returns if adding number to state was succesfull\n   * @returns {boolean}\n   */\n  #addNumber() {\n    const number = Math.random() > 0.1 ? 2 : 4;\n    const emptyFields = this.#findEmptyFields();\n\n    if (!emptyFields.length) {\n      return false;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyFields.length);\n    const { x, y } = emptyFields[randomIndex];\n\n    this.#state[y][x] = number;\n\n    return true;\n  }\n  /**\n   * Returns positions of empty fields in state\n   * @returns {({ x: number, y: number})[]}\n   */\n  #findEmptyFields() {\n    const result = [];\n\n    this.#state.forEach((row, y) => {\n      row.forEach((cell, x) => {\n        if (cell === 0) {\n          result.push({ x, y });\n        }\n      });\n    });\n\n    return result;\n  }\n  // reverser rows of state\n  #reverse() {\n    this.#state.forEach((row) => row.reverse());\n  }\n  // changes idexes from state[x][y] to state[y][x] rotating state array\n  #rotate() {\n    this.#state = this.#state.map((row, i) => {\n      const newRow = [];\n\n      for (let j = 0; j < row.length; j++) {\n        newRow.push(this.#state[j][i]);\n      }\n\n      return newRow;\n    });\n  }\n\n  // Add your own methods here\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","import { _class_apply_descriptor_get } from \"./_class_apply_descriptor_get.js\";\nimport { _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nexport function _class_private_field_get(receiver, privateMap) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"get\");\n    return _class_apply_descriptor_get(receiver, descriptor);\n}\nexport { _class_private_field_get as _ };\n","export function _class_apply_descriptor_get(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n\n    return descriptor.value;\n}\nexport { _class_apply_descriptor_get as _ };\n","export function _class_extract_field_descriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n\n    return privateMap.get(receiver);\n}\nexport { _class_extract_field_descriptor as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_field_init(obj, privateMap, value) {\n    _check_private_redeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nexport { _class_private_field_init as _ };\n","export function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","import { _class_apply_descriptor_set } from \"./_class_apply_descriptor_set.js\";\nimport { _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nexport function _class_private_field_set(receiver, privateMap, value) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"set\");\n    _class_apply_descriptor_set(receiver, descriptor, value);\n    return value;\n}\nexport { _class_private_field_set as _ };\n","export function _class_apply_descriptor_set(receiver, descriptor, value) {\n    if (descriptor.set) descriptor.set.call(receiver, value);\n    else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\nexport { _class_apply_descriptor_set as _ };\n","export function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$197cd56b15c33885$var$update","$197cd56b15c33885$var$game","getState","forEach","row","i","el","j","cellCssClass","concat","$197cd56b15c33885$var$gameCells","innerText","className","$197cd56b15c33885$var$scoreElement","getScore","getStatus","toUpperCase","$197cd56b15c33885$var$changeMessage","$197cd56b15c33885$var$messageContainer","querySelectorAll","msg","classList","add","$197cd56b15c33885$var$toggleButton","text","$197cd56b15c33885$var$button","toggle","type","messageClass","Error","querySelector","remove","$753de3cb5925592a$export$20c20a422940e173","receiver","privateMap","action","has","TypeError","get","$2f97c2a4ea6269f4$export$5a67b255b80ee4f2","descriptor","call","value","$f86983e96b0c893e$export$6b10452b5ac97eba","obj","privateCollection","$5d6c3530fa14a187$export$e235798705076415","set","$20d5c04b0c6865c9$export$268446c9779b3a21","writable","$ac6739cbe5bf1c84$export$ccedaf978f62b9dd","privateSet","fn","$ea91727f98d0802f$export$1002c20f28174dbf","$4fc75ccb937ab1df$var$_defineProperties","target","props","length","enumerable","configurable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","prototype","toString","slice","constructor","name","test","$3d28d7f1aac198f5$var$_status","WeakMap","$3d28d7f1aac198f5$var$_score","$3d28d7f1aac198f5$var$_isForCheck","$3d28d7f1aac198f5$var$_state","$3d28d7f1aac198f5$var$_initialState","$3d28d7f1aac198f5$var$_applyInitialState","WeakSet","$3d28d7f1aac198f5$var$_isMovePossible","$3d28d7f1aac198f5$var$_addNumber","$3d28d7f1aac198f5$var$_findEmptyFields","$3d28d7f1aac198f5$var$_reverse","$3d28d7f1aac198f5$var$_rotate","$3d28d7f1aac198f5$var$Game","protoProps","staticProps","Game","initialState","arguments","deafultInitialState","isForCheck","instance","Constructor","map","$3d28d7f1aac198f5$var$applyInitialState","_this","isStateChanged","mergedCellsIndexes","Set","emptyIndexes","push","cellIndex","shift","previousCellIndex","unshift","$3d28d7f1aac198f5$var$addNumber","$3d28d7f1aac198f5$var$isMovePossible","$3d28d7f1aac198f5$var$reverse","result","moveLeft","$3d28d7f1aac198f5$var$rotate","moveRight","deafultSize","fill","gameCopy","moveUp","moveDown","emptyFields","$3d28d7f1aac198f5$var$findEmptyFields","randomIndex","Math","floor","random","_emptyFields_randomIndex","x","y","cell","reverse","newRow","$197cd56b15c33885$var$gameField","document","children","addEventListener","e","startMessage","start","restart"],"version":3,"file":"index.646e6dc2.js.map"}